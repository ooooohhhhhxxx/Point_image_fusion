# YOLOv5 🚀 by Ultralytics, GPL-3.0 license
# PASCAL VOC dataset http://host.robots.ox.ac.uk/pascal/VOC by University of Oxford
# Example usage: python train.py --data VOC.yaml
# parent
# ├── yolov5
# └── datasets
#     └── VOC  ← downloads here (2.8 GB)


# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]
path: ../datasets/
train: # train images (relative to 'path')  16551 images
  - images/train
val: # val images (relative to 'path')  4952 images
  - images/val
# test: # test images (optional)
#   - images/test2007

# Classes
names:
  0: speed limit_20  # speed limit
  1: speed limit_30
  2: speed limit_50
  3: speed limit_60
  4: speed limit_70
  5: speed limit_80
  6: end speed limit_80  #end of speed limit
  7: speed limit_100
  8: speed limit_120
  9: No passing  # 禁止超车
  10: No passing over 3.5t  #禁止超重3.5吨
  11: Priority  #优先行驶
  12: Prioity road  #干道先行
  13: Giveway     #让路
  14: Stop    #停止
  15: Road closed   #道路封闭
  16: Prohibit over 3.5t
  17: Do not enter
  18: General danger
  19: Curve_left
  20: Curve_right
  21: Double curve
  22: Uneven road surface
  23: Slippery
  24: Road narrows
  25: Roadworks
  26: Traffic signals ahead
  27: Pedestrian crossing
  28: Watch for children
  29: Bicycle crossing
  30: Ice/snow
  31: Wild animal crossing
  32: End all restrictions
  33: Turn right ahead
  34: Turn left ahead
  35: Ahead only
  36: Ahead or turn only
  37: Ahead or turn only
  38: Pass by on right
  39: Pass by on left
  40: Roundabout
  41: End no passing zone
  42: End no passing zone for trucks


# Download script/URL (optional) ---------------------------------------------------------------------------------------
# download: |
#   import xml.etree.ElementTree as ET

#   from tqdm import tqdm
#   from utils.general import download, Path


#   def convert_label(path, lb_path, year, image_id):
#       def convert_box(size, box):
#           dw, dh = 1. / size[0], 1. / size[1]
#           x, y, w, h = (box[0] + box[1]) / 2.0 - 1, (box[2] + box[3]) / 2.0 - 1, box[1] - box[0], box[3] - box[2]
#           return x * dw, y * dh, w * dw, h * dh

#       in_file = open(path / f'VOC{year}/Annotations/{image_id}.xml')
#       out_file = open(lb_path, 'w')
#       tree = ET.parse(in_file)
#       root = tree.getroot()
#       size = root.find('size')
#       w = int(size.find('width').text)
#       h = int(size.find('height').text)

#       names = list(yaml['names'].values())  # names list
#       for obj in root.iter('object'):
#           cls = obj.find('name').text
#           if cls in names and int(obj.find('difficult').text) != 1:
#               xmlbox = obj.find('bndbox')
#               bb = convert_box((w, h), [float(xmlbox.find(x).text) for x in ('xmin', 'xmax', 'ymin', 'ymax')])
#               cls_id = names.index(cls)  # class id
#               out_file.write(" ".join([str(a) for a in (cls_id, *bb)]) + '\n')


#   # Download
#   dir = Path(yaml['path'])  # dataset root dir
#   url = 'https://github.com/ultralytics/yolov5/releases/download/v1.0/'
#   urls = [f'{url}VOCtrainval_06-Nov-2007.zip',  # 446MB, 5012 images
#           f'{url}VOCtest_06-Nov-2007.zip',  # 438MB, 4953 images
#           f'{url}VOCtrainval_11-May-2012.zip']  # 1.95GB, 17126 images
#   download(urls, dir=dir / 'images', delete=False, curl=True, threads=3)

#   # Convert
#   path = dir / 'images/VOCdevkit'
#   for year, image_set in ('2012', 'train'), ('2012', 'val'), ('2007', 'train'), ('2007', 'val'), ('2007', 'test'):
#       imgs_path = dir / 'images' / f'{image_set}{year}'
#       lbs_path = dir / 'labels' / f'{image_set}{year}'
#       imgs_path.mkdir(exist_ok=True, parents=True)
#       lbs_path.mkdir(exist_ok=True, parents=True)

#       with open(path / f'VOC{year}/ImageSets/Main/{image_set}.txt') as f:
#           image_ids = f.read().strip().split()
#       for id in tqdm(image_ids, desc=f'{image_set}{year}'):
#           f = path / f'VOC{year}/JPEGImages/{id}.jpg'  # old img path
#           lb_path = (lbs_path / f.name).with_suffix('.txt')  # new label path
#           f.rename(imgs_path / f.name)  # move image
#           convert_label(path, lb_path, year, id)  # convert labels to YOLO format
